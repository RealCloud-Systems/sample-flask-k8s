name: CD
on:
  push:
    branches: [main]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      
      - name: build image and push to docker hub
        uses: docker/build-push-action@v1.1.0
        with:
          username: marcosportorc
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: marcosportorc/webapp
          tags: ${{ github.sha }}, 1.0
      - name: Integrate with Upwind
        env:
          IMAGE: webapp
          IMAGE_SHA: ${{ github.sha }}
          UPWIND_API_ENDPOINT: https://api.upwind.io
          UPWIND_AUTH_ENDPOINT: https://auth.upwind.io
          UPWIND_ORGANIZATION_ID: ${{ secrets.UPWIND_ORGANIZATION_ID }}
          UPWIND_CLIENT_SECRET: ${{ secrets.UPWIND_CLIENT_SECRET }}
          UPWIND_CLIENT_ID: ${{ secrets.UPWIND_CLIENT_ID }}
        run: |
        # Get Access Token
          response=$(curl -s --location "${UPWIND_AUTH_ENDPOINT}/oauth/token" \
          --header "Content-Type: application/x-www-form-urlencoded" \
          --data-urlencode "grant_type=client_credentials" \
          --data-urlencode "audience=${UPWIND_API_ENDPOINT}" \
          --data-urlencode "client_id=${UPWIND_CLIENT_ID}" \
          --data-urlencode "client_secret=${UPWIND_CLIENT_SECRET}")
        ACCESS_TOKEN=$(echo "$response" | jq -r '.access_token')  

        # Call Upwind API
          CURL_CMD="curl -fsSL \"${UPWIND_API_ENDPOINT}/v1/organizations/$UPWIND_ORGANIZATION_ID/events\" \
          --request POST \
          --write-out \"\n%{http_code}\" \
          --header \"Content-Type: application/json\" \
          --header \"Authorization: Bearer $ACCESS_TOKEN\" \
          --data '{
              \"type\": \"image_build\",
              \"reporter\": \"github_actions\",
              \"data\" :{
                  \"image\" : \"${IMAGE}\",
                  \"commit_sha\" : \"${GITHUB_SHA}\",
                  \"repository\": \"https://github.com/${GITHUB_REPOSITORY}.git\",
                  \"branch\": \"${GITHUB_REF_NAME}\",
                  \"image_sha\": \"${IMAGE_SHA}\",
                  \"build_time\" : \"$(date +'%Y-%m-%dT%H:%M:%SZ')\"
              }
            }'
          "
          response=$(eval "${CURL_CMD}")
          echo "${response}"
          response_code=$(echo "${response}" | tail -n 1)
          response_body=$(echo "${response}" | sed '$ d' | jq '.')
          echo "Status Code: ${response_code}"
          echo "Response:"
          echo "${response_body}"
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: kustomize
        uses: imranismail/setup-kustomize@v2

      - name: update k8s
        run: |
          cd kubernetes
          kustomize edit set image sample-flask-k8s=marcosportorc/webapp:${{ github.sha }}
          cat kustomization.yaml
      - name: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Deploy Action"
          git commit -am "Kustomize Updating Image"
      - name: push
        uses: ad-m/github-push-action@master
